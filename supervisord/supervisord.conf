[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700
;username=admin
;password=admin

[inet_http_server]
port=127.0.0.1:9001
;username=admin
;password=admin

[supervisord]
logfile=/tmp/supervisord.log
logfile_maxbytes=10MB
logfile_backups=0
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true
silent=false
minfds=1024
minprocs=200
nocleanup=true
childlogdir=/tmp

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock
;username=admin
;password=admin

;;; Servers
[program:grpc_server_python]
command=python ./server/python/main.py
environment=PORT="5005%(process_num)1d",PYTHONPATH="./server/python/:./server/python/proto_files"
numprocs=2
;autostart=false
process_name=%(program_name)s-%(process_num)02d
stdout_logfile=/tmp/grpc-server-python.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/grpc-server-python.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:celery_python]
command=celery -A app.tasks:app worker -l info
directory=./server/python
environment=
    PORT="5005%(process_num)1d",
    PYTHONPATH="./server/python/:./server/python/proto_files",
    METRICS_PORT="4101%(process_num)1d",
    PROMETHEUS_ENABLED="false"
numprocs=2
;autostart=false
startretries=10
startsecs=10
process_name=%(program_name)s-%(process_num)02d
stdout_logfile=/tmp/celery-python.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/celery-python.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

; TODO: celery exporter

[program:grpc_server_go]
command=./server/golang/server.out
environment=PORT="5006%(process_num)1d"
numprocs=2
process_name=%(program_name)s-%(process_num)02d
stdout_logfile=/tmp/grpc-server-go.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/grpc-server-go.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[group:grpc_server]
programs=grpc_server_python,grpc_server_go

;;; Clients
[program:grpc_client_python]
command=python ./client/python/main.py
environment=
    PYTHONPATH="./client/python/:./client/python/proto_files",
    NAME="python",
    INFINITE="true",
    METRICS_PORT="2004%(process_num)1d"
numprocs=10
autostart=false
process_name=%(program_name)s-%(process_num)02d
stdout_logfile=/tmp/grpc-client-python.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/grpc-client-python.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:grpc_client_go]
command=./client/golang/client.out
environment=NAME="golang",INFINITE="true",METRICS_PORT="2003%(process_num)1d"
numprocs=10
autostart=false
process_name=%(program_name)s-%(process_num)02d
stdout_logfile=/tmp/grpc-client-go.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/grpc-client-go.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

;;; HAProxy
[program:haproxy]
command=haproxy -f ./haproxy/haproxy.cfg
stdout_logfile=/tmp/haproxy.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/haproxy.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

;;; Prometheus
[program:haproxy_exporter]
command=haproxy_exporter --haproxy.scrape-uri="http://localhost:1936/;csv"
stdout_logfile=/tmp/haproxy-exporter.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/haproxy-exporter.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:prometheus]
command=prometheus 
    --config.file ./prometheus/prometheus.yml
    --web.console.templates ./prometheus/console
    --web.console.libraries ./prometheus/console/libraries
    --web.enable-lifecycle
    --web.config.file ./prometheus/web-config.yml
stdout_logfile=/tmp/prometheus.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/prometheus.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:alertmanager]
command=alertmanager --config.file ./prometheus/alertmanager.yml
stdout_logfile=/tmp/alertmanager.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/alertmanager.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:grafana]
command=docker run -v grafana:/var/lib/grafana --rm --name grafana --network host grafana/grafana
stdout_logfile=/tmp/grafana.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/grafana.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:node_exporter]
command=node_exporter
    --collector.supervisord
    --collector.tcpstat
    --collector.systemd
    --collector.sysctl
    --collector.ntp
    --collector.network_route
    --collector.mountstats
    --collector.cgroups
    --collector.supervisord.url="http://localhost:9001/RPC2"
stdout_logfile=/tmp/node-exporter.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/node-exporter.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:statsd_exporter]
command=statsd_exporter 
    --web.listen-address=":9102"
    --web.enable-lifecycle
    --statsd.listen-udp=":9125"
    --statsd.listen-tcp=":9125"
    --statsd.unixsocket-mode="0700"
    ; --statsd.mapping-config=./prometheus/statsd_mapping.yml
autostart=false
stdout_logfile=/tmp/statsd-exporter.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/statsd-exporter.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:promlens]
command=promlens 
    --web.default-prometheus-url=="http://localhost:9090"
    --shared-links.sql.driver="sqlite"
    --shared-links.sql.dsn=":memory:"
    --shared-links.sql.create-tables
    --grafana.url="http://localhost:3000"
    --grafana.api-token-file=./prometheus/grafana-api-token-file.txt
    --web.listen-address=":10200"
autostart=false
stdout_logfile=/tmp/promlens.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/promlens.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[group:prometheus]
programs=haproxy_exporter,prometheus,alertmanager,grafana,node_exporter,statsd_exporter,promlens

;;; ETCD
[program:etcd_gateway]
command=etcd gateway start --endpoints=172.16.0.10:2380,172.16.0.20:2380,172.16.0.30:2380 --listen-addr=127.0.0.1:2379
autostart=false
stdout_logfile=/tmp/etcd-gateway.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/etcd-gateway.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:etcd0]
command=etcd
    --name=etcd0 
    --data-dir=/tmp/etcd-data0
    --listen-client-urls=http://172.16.0.10:2379
    --advertise-client-urls=http://172.16.0.10:2379
    --listen-peer-urls=http://172.16.0.10:2380
    --initial-advertise-peer-urls=http://172.16.0.10:2380
    --initial-cluster-state=new
    --initial-cluster=etcd0=http://172.16.0.10:2380,etcd1=http://172.16.0.20:2380,etcd2=http://172.16.0.30:2380
    --initial-cluster-token=etcd-cluster-1
    --auto-compaction-retention=1
    --max-txn-ops=10000
    --max-request-bytes=104857600
autostart=false
stdout_logfile=/tmp/etcd0.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/etcd0.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:etcd1]
command=etcd
    --name=etcd1 
    --data-dir=/tmp/etcd-data1
    --listen-client-urls=http://172.16.0.20:2379
    --advertise-client-urls=http://172.16.0.20:2379
    --listen-peer-urls=http://172.16.0.20:2380
    --initial-advertise-peer-urls=http://172.16.0.20:2380
    --initial-cluster-state=new
    --initial-cluster-token=etcd-cluster-1
    --initial-cluster=etcd0=http://172.16.0.10:2380,etcd1=http://172.16.0.20:2380,etcd2=http://172.16.0.30:2380
    --auto-compaction-retention=1
    --max-txn-ops=10000
    --max-request-bytes=104857600
autostart=false
stdout_logfile=/tmp/etcd1.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/etcd1.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:etcd2]
command=etcd
    --name=etcd2 
    --data-dir=/tmp/etcd-data2
    --listen-client-urls=http://172.16.0.30:2379
    --advertise-client-urls=http://172.16.0.30:2379
    --listen-peer-urls=http://172.16.0.30:2380
    --initial-advertise-peer-urls=http://172.16.0.30:2380
    --initial-cluster-state=new
    --initial-cluster=etcd0=http://172.16.0.10:2380,etcd1=http://172.16.0.20:2380,etcd2=http://172.16.0.30:2380
    --initial-cluster-token=etcd-cluster-1
    --auto-compaction-retention=1
    --max-txn-ops=10000
    --max-request-bytes=104857600
autostart=false
stdout_logfile=/tmp/etcd2.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/etcd2.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[group:etcd]
programs=etcd0,etcd1,etcd2,etcd_gateway

;;; Kafka
[program:kafka]
command=docker run 
    --rm
    --name kafka
    -v kafka:/bitnami
    -e 'KAFKA_CFG_ZOOKEEPER_CONNECT=localhost:2181'
    -e 'ALLOW_PLAINTEXT_LISTENER=yes'
    -e 'KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true'
    -e 'KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092'
    --network host
    docker.io/bitnami/kafka:3.3
;autostart=false
startretries=10
startsecs=20
priority=997
stdout_logfile=/tmp/kafka.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/kafka.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:kafka_ui]
command=docker run
    --rm
    --name kafka-ui
    --network host
    -e 'KAFKA_CLUSTERS_0_NAME=local'
    -e 'KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181'
    -e 'KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092'
    -e 'SERVER_PORT=10100'
    provectuslabs/kafka-ui:v0.4.0
;autostart=false
startretries=10
startsecs=10
priority=999
stdout_logfile=/tmp/kafka-ui.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/kafka-ui.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:kafka_exporter]
command=docker run
    --rm
    --name kafka-exporter
    --network host
    bitnami/kafka-exporter:1-debian-11
    --kafka.server="localhost:9092"
    --log.level=debug
    --log.format=logfmt
    --web.listen-address=":9308"
    --zookeeper.server="localhost:2181"
    --concurrent.enable
    --offset.show-all
    --kafka.version="3.3.1"
    --web.telemetry-path="/metrics"
;autostart=false
startretries=10
startsecs=10
priority=999
stdout_logfile=/tmp/kafka-exporter.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/kafka-exporter.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:kafka_jmx_exporter]
command=docker run
    --rm
    --name kafka-jmx-exporter
    --network host
    bitnami/jmx-exporter:0-debian-11
;autostart=false
startretries=10
startsecs=10
priority=999
stdout_logfile=/tmp/kafka-jmx-exporter.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/kafka-jmx-exporter.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[program:zookeeper]
command=docker run 
    --rm
    --name zookeeper
    -v zookeeper:/bitnami
    --network host
    -e 'ALLOW_ANONYMOUS_LOGIN=yes'
    docker.io/bitnami/zookeeper:3.8
;autostart=false
startsecs=20
startretries=5
priority=995
stdout_logfile=/tmp/zookeeper.log
stdout_logfile_maxbytes=10MB
stderr_logfile=/tmp/zookeeper.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=0
stdout_logfile_backups=0

[group:kafka]
programs=kafka,zookeeper,kafka_exporter,kafka_ui
